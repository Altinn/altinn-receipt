name: Deploy
on:
  push:
    branches: [ main ]
    paths:
      - '.deploy/**'
      - '.github/workflows/build-and-push-app.yml'
      - 'src/**'
      - 'Dockerfile'

permissions:
      id-token: write
      contents: read

env:
  REGISTRY: ${{ secrets.ALTINN_REGISTRY }}
  APP_NAME: altinn-receipt

jobs:
  docker-build-push:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.set_short_sha.outputs.short_sha }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: 'Azure login'
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set short SHA
        id: set_short_sha
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Log in to Container registry
        run: |
          az acr login --name ${{ env.REGISTRY }} --expose-token --output tsv --query accessToken --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} --only-show-errors | docker login ${{ env.REGISTRY }} --username 00000000-0000-0000-0000-000000000000 --password-stdin
      - name: Docker build
        run: |
          docker build . -t ${{ env.REGISTRY }}/${{ env.APP_NAME }}:${{ env.SHORT_SHA }}
      - name: Docker push
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.APP_NAME }}:${{ env.SHORT_SHA }}

  app-config-artifact-push:
    name: App config push
    runs-on: ubuntu-latest
    needs: docker-build-push
    strategy:
      matrix:
        environment: [at21, at22, at23, at24, yt01, tt02, prod]
    environment: ${{ matrix.environment }}
    env:
      SHORT_SHA: ${{ needs.docker-build-push.outputs.short_sha }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: 'Azure login'
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Container registry
        run: |
          az acr login --name ${{ env.REGISTRY }} --expose-token --output tsv --query accessToken --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} --only-show-errors | docker login ${{ env.REGISTRY }} --username 00000000-0000-0000-0000-000000000000 --password-stdin

      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@8d5f40dca5aa5d3c0fc3414457dda15a0ac92fa4 # v2.5.1

      - name: Replace TAG in app.yaml
        run: sed -i 's/\$SHA/${{ env.SHORT_SHA }}/g' .deploy/app.yaml

      - name: Push config artifact
        run: |
          flux push artifact oci://${{ env.REGISTRY }}/configs/${{ env.APP_NAME }}-${{ matrix.environment }}:${{ env.SHORT_SHA }} \
          --path="./.deploy" \
          --source="$(git config --get remote.origin.url)" \
          --revision="$(git branch --show-current)/$(git rev-parse HEAD)" \
          --annotations "org.opencontainers.image.description=altinn-receipt" \
          --annotations "org.opencontainers.image.authors=team-core"

      - name: Tag artifact as latest
        run: |
          flux tag artifact oci://${{ env.REGISTRY }}/configs/${{ env.APP_NAME }}-${{ matrix.environment }}:${{ env.SHORT_SHA }} --tag latest
